---
import { getCollection, type CollectionEntry } from 'astro:content';
import BlogLayout from '../../layouts/BlogLayout.astro';
import { getPageUrl } from '../../utils';

export async function getStaticPaths() {
  const pages = await getCollection('pages');

  return pages.map((page) => {
    const url = getPageUrl(page);
    // Remove the /content prefix and split into slug parts
    const slugParts = url.replace('/content/', '').split('/').filter(Boolean);

    return {
      params: { slug: slugParts.join('/') },
      props: { page },
    };
  });
}

interface Props {
  page: CollectionEntry<'pages'>;
}

const { page } = Astro.props;
const { title, description } = page.data;
const { Content } = await page.render();
---

<BlogLayout title={title} description={description}>
  <article class="max-w-4xl mx-auto">
    <header class="mb-8">
      <h1 class="text-4xl font-bold mb-4">{title}</h1>
      {description && (
        <p class="text-lg text-gray-700 mb-6">{description}</p>
      )}
    </header>

    <div class="prose prose-lg max-w-none">
      <Content />
    </div>
  </article>
</BlogLayout>

<style>
  .prose {
    @apply text-base-content;
  }

  .prose h1, .prose h2, .prose h3, .prose h4, .prose h5, .prose h6 {
    @apply text-base-content;
  }

  .prose a {
    @apply text-primary hover:text-primary-content;
  }

  .prose code {
    @apply bg-base-200 text-base-content px-1 py-0.5 rounded;
  }

  .prose pre {
    @apply bg-base-200 text-base-content;
  }

  .prose blockquote {
    @apply border-l-primary text-base-content;
  }
</style>